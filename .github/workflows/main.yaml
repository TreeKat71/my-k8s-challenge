name: DigitalOcean Kubernetes Challenge

on:
  push:
    branches: ["main"]
    tags: ["*.*"]
  # Can be trigger manually
  workflow_dispatch:

defaults:
  run:
  # defaults.run only applies to jobs.<job_id>.steps[*].run
    working-directory: fastapi

jobs:
  fastapi:
    runs-on: ubuntu-latest
    steps:
      # Get Codebase
      - uses: actions/checkout@v2
      # Setup python env
      - name: Set up Python 3.7
        uses: actions/setup-python@v2
        with:
          python-version: "3.7"
      # Upgrade pip
      - name: Upgrade pip
        run: python -m pip install --upgrade pip
      # Python Linter
      - name: Python lint with flake8
        run: |
          pip install flake8
          flake8 --ignore=E501 .
      # Python Security Linter
      - name: Python security lint with bandit
        run: |
          pip install bandit
          bandit -r --skip B101 .
      # Install dependencies
      - name: Install dependencies
        run: |
          pip install pipenv
          pipenv install --dev --system
      # Test
      - name: Test with pytest
        run: pytest
############### Dockerfile ###############
      # Dockerfile Linter: Hadolint
      - name: Dockerfile lint with Hadolint
        run: |
          wget --quiet -O hadolint https://github.com/hadolint/hadolint/releases/download/$VERSION/hadolint-Linux-x86_64
          chmod +x hadolint
          ./hadolint Dockerfile --verbose --failure-threshold error
        env:
          VERSION: v2.8.0
##########################################
      - name: Generate pip requirements file
        run: |
          pipenv lock -r > requirements.txt
      #### Not sure adding ca to CI pipeline is a good practice ####
      # Dockerhub auth
      - name: Add DNS record to etc hosts
        run: |
          echo "${{ secrets.HARBOR_IP }} ${{ secrets.HARBOR_HOSTNAME }}" | sudo tee -a /etc/hosts

      - name: Make docker trust the certificate
        run: |
          sudo mkdir -p /etc/docker/certs.d/${{ secrets.HARBOR_HOSTNAME }}
          echo "${{ secrets.HARBOR_CA }}" | sudo tee -a  /etc/docker/certs.d/${{ secrets.HARBOR_HOSTNAME }}/ca.crt

      # Dockerhub auth
      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          registry: ${{ secrets.HARBOR_HOSTNAME }}
          username: ${{ secrets.HARBOR_USERNAME }}
          password: ${{ secrets.HARBOR_PASSWORD }}

      # Set artifact tag
      - name: Set artifact tag
        id: artifact
        run: |
          tag="${{ github.ref_name }}"
          if [ "${{ github.ref_name }}" = "main" ]
          then
              tag="latest"
          fi
          echo "::set-output name=TAG::${tag}"
      # Build and push docker image
      - name: Build and push fastapi
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: fastapi
          push: true
          tags: ${{ secrets.HARBOR_HOSTNAME }}/treekat71/k8s-challenge:${{ steps.artifact.outputs.TAG }}

  fluentd:
    runs-on: ubuntu-latest
    steps:
      # Get Codebase
      - uses: actions/checkout@v2
      # Dockerhub auth
      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      # Build and push docker image
      - name: Build and push fluentd-s3
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: fluentd
          push: true
          tags: treekat71/fluentd-s3:1.0
